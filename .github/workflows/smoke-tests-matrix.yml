name: Smoke Tests

on:
  push:
    branches: [main]
    paths:
      - 'legacy/kitchensink/**'
      - 'smoke-tests/**'
      - 'app/**'
  pull_request:
    paths:
      - 'legacy/kitchensink/**'
      - 'smoke-tests/**'
      - 'app/**'
  workflow_dispatch:

jobs:
  smoke:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [legacy, spring]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Start target app
        id: start-target-app
        run: |
          set -euo pipefail

          if [[ "${{ matrix.target }}" == "legacy" ]]; then
            docker rm -f wf 2>/dev/null || true

            docker run -d --name wf -p 8080:8080 quay.io/wildfly/wildfly:latest
            mvn -f legacy/kitchensink/pom.xml -q clean package -DskipTests
            docker cp legacy/kitchensink/target/kitchensink.war \
                     wf:/opt/jboss/wildfly/standalone/deployments/

            echo "Waiting for legacy REST …"
            for i in {1..24}; do
              curl -fsS http://localhost:8080/kitchensink/rest/members && break
              sleep 5
            done

            echo "base_url=http://localhost:8080/kitchensink/rest" >>"$GITHUB_OUTPUT"

          else
            # ---------- Spring + Mongo ----------
            docker network create ks-net 2>/dev/null || true

            # MongoDB
            docker rm -f mongo 2>/dev/null || true
            docker run -d --name mongo --network ks-net mongo:6

            # wait until the server answers pings
            echo "Waiting for Mongo..."
            for i in {1..24}; do
              docker exec mongo mongosh --quiet --eval "db.runCommand({ ping: 1 })" >/dev/null 2>&1 && break
              sleep 5
            done

            # Spring Boot
            docker rm -f ks 2>/dev/null || true
            docker build -t kitchensink-app ./app
            docker run -d --name ks --network ks-net -p 8081:8081 kitchensink-app

            echo "Waiting for spring actuator health..."
            for i in {1..24}; do
              curl -fsS http://localhost:8081/kitchensink/actuator/health && break
              sleep 5
            done

            echo "base_url=http://localhost:8081/kitchensink/rest" >>"$GITHUB_OUTPUT"
          fi

      - name: Run smoke tests
        run: mvn -q -f smoke-tests/pom.xml clean test -Dbase.url=${{ steps.start-target-app.outputs.base_url }}

      - name: Tear down
        if: always()
        run: |
          if [[ "${{ matrix.target }}" == "legacy" ]]; then
            docker rm -f wf        || true
          else
            docker rm -f ks mongo  || true
            docker network rm ks-net || true
          fi
